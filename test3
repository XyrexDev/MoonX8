-- Enhanced Key System GUI with improved design and animations
local TweenService = game:GetService("TweenService")

-- Create main GUI
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "KeySystemUI"

-- Pre-loading image setup (smaller, no background)
local preloadImage = Instance.new("ImageLabel", gui)
preloadImage.Size = UDim2.new(0, 200, 0, 200) -- Smaller size
preloadImage.Position = UDim2.new(0.5, -100, 0.5, -100)
preloadImage.BackgroundTransparency = 1 -- No background
preloadImage.Image = "rbxassetid://114618695295982" -- Replace with your texture ID
preloadImage.ImageTransparency = 1

-- Add rounded corners to preload image
local preloadCorner = Instance.new("UICorner", preloadImage)
preloadCorner.CornerRadius = UDim.new(0, 15)

-- Main frame (larger and taller, centered)
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 400, 0, 280) -- Made taller (was 220, now 280)
frame.Position = UDim2.new(0.5, -200, 0.5, -140) -- Adjusted position for new height
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.BackgroundTransparency = 1 -- Start invisible for animation
frame.Visible = false -- Hide completely until logo finishes

-- Add rounded corners to main frame
local frameCorner = Instance.new("UICorner", frame)
frameCorner.CornerRadius = UDim.new(0, 12)

-- Add subtle drop shadow effect - HIDDEN initially
local shadow = Instance.new("Frame", gui)
shadow.Size = frame.Size
shadow.Position = UDim2.new(0.5, -198, 0.5, -138) -- Adjusted for new height
shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
shadow.BackgroundTransparency = 0.8
shadow.BorderSizePixel = 0
shadow.ZIndex = frame.ZIndex - 1
shadow.BackgroundTransparency = 1 -- Start invisible
shadow.Visible = false -- Hide completely until logo finishes

local shadowCorner = Instance.new("UICorner", shadow)
shadowCorner.CornerRadius = UDim.new(0, 12)

-- Title label (updated text)
local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, -40, 0, 40)
title.Position = UDim2.new(0, 20, 0, 15)
title.BackgroundTransparency = 1
title.Text = "MoonX Rewrite ðŸŒ™ | BGSI"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 20
title.TextXAlignment = Enum.TextXAlignment.Center

-- Get Key button (darker blue color)
local getKeyBtn = Instance.new("TextButton", frame)
getKeyBtn.Size = UDim2.new(1, -40, 0, 35)
getKeyBtn.Position = UDim2.new(0, 20, 0, 65)
getKeyBtn.Text = "Get Key"
getKeyBtn.BackgroundColor3 = Color3.fromRGB(50, 100, 150)
getKeyBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
getKeyBtn.Font = Enum.Font.SourceSansBold
getKeyBtn.TextSize = 16
getKeyBtn.BorderSizePixel = 0

-- Rounded corners for Get Key button
local getKeyCorner = Instance.new("UICorner", getKeyBtn)
getKeyCorner.CornerRadius = UDim.new(0, 8)

-- Key input box (improved styling, no default text)
local keyBox = Instance.new("TextBox", frame)
keyBox.Size = UDim2.new(1, -40, 0, 35)
keyBox.Position = UDim2.new(0, 20, 0, 110)
keyBox.Text = "" -- Start with empty text
keyBox.PlaceholderText = "Enter MoonX key here..."
keyBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
keyBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
keyBox.TextColor3 = Color3.fromRGB(255, 255, 255)
keyBox.Font = Enum.Font.SourceSans
keyBox.TextSize = 14
keyBox.BorderSizePixel = 0
keyBox.ClearTextOnFocus = false

-- Rounded corners for text box
local keyBoxCorner = Instance.new("UICorner", keyBox)
keyBoxCorner.CornerRadius = UDim.new(0, 8)

-- Submit button (improved styling)
local submitBtn = Instance.new("TextButton", frame)
submitBtn.Size = UDim2.new(1, -40, 0, 35)
submitBtn.Position = UDim2.new(0, 20, 0, 155)
submitBtn.Text = "Submit Key"
submitBtn.BackgroundColor3 = Color3.fromRGB(60, 150, 60)
submitBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
submitBtn.Font = Enum.Font.SourceSansBold
submitBtn.TextSize = 16
submitBtn.BorderSizePixel = 0

-- Rounded corners for submit button
local submitCorner = Instance.new("UICorner", submitBtn)
submitCorner.CornerRadius = UDim.new(0, 8)

-- Status label for countdown display (new element)
local statusLabel = Instance.new("TextLabel", frame)
statusLabel.Size = UDim2.new(1, -40, 0, 30)
statusLabel.Position = UDim2.new(0, 20, 0, 200)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = ""
statusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
statusLabel.Font = Enum.Font.SourceSans
statusLabel.TextSize = 14
statusLabel.TextXAlignment = Enum.TextXAlignment.Center

-- Button hover effects
local function createHoverEffect(button, hoverColor, originalColor)
    button.MouseEnter:Connect(function()
        local hoverTween = TweenService:Create(
            button,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundColor3 = hoverColor}
        )
        hoverTween:Play()
    end)
    
    button.MouseLeave:Connect(function()
        local leaveTween = TweenService:Create(
            button,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundColor3 = originalColor}
        )
        leaveTween:Play()
    end)
end

-- Apply hover effects (updated for darker blue)
createHoverEffect(getKeyBtn, Color3.fromRGB(70, 120, 170), Color3.fromRGB(50, 100, 150))
createHoverEffect(submitBtn, Color3.fromRGB(80, 170, 80), Color3.fromRGB(60, 150, 60))

-- Button functionality
getKeyBtn.MouseButton1Click:Connect(function()
    setclipboard("https://lootdest.org/s?Si1CYuYP")
    
    -- Visual feedback
    local originalText = getKeyBtn.Text
    getKeyBtn.Text = "Copied link to Clipboard!"
    wait(1.5)
    getKeyBtn.Text = originalText
end)

-- Variable to track if verification is in progress
local isVerifying = false

submitBtn.MouseButton1Click:Connect(function()
    if isVerifying then
        return -- Prevent multiple clicks during verification
    end
    
    local key = keyBox.Text
    isVerifying = true
    
    -- Disable the submit button during verification
    submitBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    submitBtn.Text = "Verifying..."
    
    -- Start 60-second countdown with dots animation
    local countdown = 60
    local dotPattern = {"...", "..", ".", "..."}
    local dotIndex = 1
    
    local function updateCountdown()
        if countdown > 0 then
            statusLabel.Text = countdown .. ", Verifying Key" .. dotPattern[dotIndex]
            dotIndex = dotIndex % 4 + 1
            countdown = countdown - 1
            
            wait(1)
            updateCountdown()
        else
            -- Countdown finished, show invalid key
            statusLabel.Text = ""
            
            local originalText = "Submit Key"
            local originalColor = keyBox.BackgroundColor3
            
            submitBtn.Text = "Invalid key, Try again"
            
            -- Fade textbox to red
            local redTween = TweenService:Create(
                keyBox,
                TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {BackgroundColor3 = Color3.fromRGB(150, 50, 50)}
            )
            
            redTween:Play()
            
            -- Wait and fade back to original
            wait(1)
            
            local normalTween = TweenService:Create(
                keyBox,
                TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {BackgroundColor3 = originalColor}
            )
            
            normalTween:Play()
            
            -- Reset button text and re-enable
            wait(0.5)
            submitBtn.Text = originalText
            submitBtn.BackgroundColor3 = Color3.fromRGB(60, 150, 60)
            isVerifying = false
        end
    end
    
    -- Start the countdown
    spawn(updateCountdown)
end)

-- Pre-loading animation sequence
local function startKeySystemGUI()
    -- Make GUI visible
    frame.Visible = true
    shadow.Visible = true
    
    -- Fade-in animation (slower)
    local fadeInTween = TweenService:Create(
        frame,
        TweenInfo.new(0.8, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {BackgroundTransparency = 0}
    )

    local shadowFadeIn = TweenService:Create(
        shadow,
        TweenInfo.new(0.8, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {BackgroundTransparency = 0.8}
    )

    -- Animation from top of screen (slower) - adjusted for new height
    frame.Position = UDim2.new(0.5, -200, 0, -280) -- Start above screen
    shadow.Position = UDim2.new(0.5, -198, 0, -278) -- Start above screen

    local slideInTween = TweenService:Create(
        frame,
        TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
        {Position = UDim2.new(0.5, -200, 0.5, -140)}
    )

    local shadowSlideTween = TweenService:Create(
        shadow,
        TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
        {Position = UDim2.new(0.5, -198, 0.5, -138)}
    )

    -- Play animations
    fadeInTween:Play()
    shadowFadeIn:Play()
    slideInTween:Play()
    shadowSlideTween:Play()
end

-- Preload image fade in (0.5 seconds)
local preloadFadeIn = TweenService:Create(
    preloadImage,
    TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    {ImageTransparency = 0}
)

-- Preload image fade out (1 second)
local preloadFadeOut = TweenService:Create(
    preloadImage,
    TweenInfo.new(1.0, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    {ImageTransparency = 1}
)

-- Start the preload sequence
preloadFadeIn:Play()

preloadFadeIn.Completed:Connect(function()
    wait(1.0) -- Display image for 1 second
    preloadFadeOut:Play()
    
    preloadFadeOut.Completed:Connect(function()
        preloadImage:Destroy()
        startKeySystemGUI()
    end)
end)
